{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{213:function(e,t,a){\"use strict\";a.r(t);var r=a(0),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"vue-storefront-core-package\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-storefront-core-package\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Vue Storefront Core package\")]),e._v(\" \"),a(\"p\",[e._v(\"Core should contain \"),a(\"strong\",[e._v(\"only\")]),e._v(\" features that \"),a(\"strong\",[e._v(\"glue\")]),e._v(\" other functionalities (similarly to \"),a(\"a\",{attrs:{href:\"https://github.com/nuxt/nuxt.js/tree/dev/packages/core\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Nuxt.js core\"),a(\"OutboundLink\")],1),e._v(\") usually by exporting common interfaces.\")]),e._v(\" \"),a(\"p\",[e._v(\"Core complexity should be reduced to bare minimum.\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"responsibility-and-use-case\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#responsibility-and-use-case\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Responsibility and use case\")]),e._v(\" \"),a(\"p\",[e._v(\"Core responsibility is to expose implementation of restrictions and abstractions needed for other parts of the ecosystem to working well together.\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"architecture\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#architecture\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Architecture\")]),e._v(\" \"),a(\"p\",[e._v(\"In simple words \"),a(\"code\",[e._v(\"@vue-storefront/core\")]),e._v(\" is just a set of abstractions, libraries and interfaces.\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"Input\")])]),e._v(\" \"),a(\"p\",[e._v(\"none\")]),e._v(\" \"),a(\"p\",[a(\"strong\",[e._v(\"Output\")])]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"core libraries\")]),e._v(\" \"),a(\"li\",[e._v(\"interfaces for API Client\")]),e._v(\" \"),a(\"li\",[e._v(\"interfaces for Hooks\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"interfaces\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#interfaces\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Interfaces\")]),e._v(\" \"),a(\"p\",[e._v(\"We are aware of the fact that data formats between platforms are totally different and making them unified is redundant work that will never end up in optimal result.\")]),e._v(\" \"),a(\"p\",[e._v(\"This fact implies that we need to create multiple themes for every integration and we can't get rid of this obstackle.\")]),e._v(\" \"),a(\"p\",[e._v('What we can do however is finding a common \"agnostic\" denominator that can be shared across all integrations but won\\'t be tied to any platform implementation details. The solution of this problem are high-level interfaces for hooks output and API clients.')]),e._v(\" \"),a(\"p\",[e._v(\"We can define what objects are rreturned by hooks but their properties will be different depending on a platform. This way we can make maintanance of multiple themes easier and have some shared formats between each fo them so it's much easier for developers to work with different integrations.\")]),e._v(\" \"),a(\"p\",[e._v(\"For exampel we can agree that \"),a(\"code\",[e._v(\"useProduct\")]),e._v(\" hook is always returning \"),a(\"code\",[e._v(\"product\")]),e._v(\", \"),a(\"code\",[e._v(\"category\")]),e._v(\" \"),a(\"code\",[e._v(\"childProducts\")]),e._v(\" and \"),a(\"code\",[e._v(\"parentProduct\")]),e._v(\" objects (some of them can be \"),a(\"code\",[e._v(\"null\")]),e._v('). Their properties will be different depending on a platform but \"migration\" will only require changing property names between the same entities.')]),e._v(\" \"),a(\"p\",[e._v(\"Same for API Clients - we can expect them to utilize axios so we have a common way of configuring them \"),a(\"router-link\",{attrs:{to:\"/rfc/api-client.html#api\"}},[e._v(\"via \"),a(\"code\",[e._v(\"setup\")]),e._v(\" method\")]),e._v(\" but returned entities can be different for every integration.\")],1),e._v(\" \"),a(\"p\",[e._v(\"You can read more about interfaces and integrations \"),a(\"router-link\",{attrs:{to:\"/rfc/integrations.html\"}},[e._v(\"here\")])],1),e._v(\" \"),a(\"h3\",{attrs:{id:\"interfaces-api\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#interfaces-api\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Interfaces API\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"api-client\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#api-client\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" API Client\")]),e._v(\" \"),a(\"p\",[e._v(\"Should expose \"),a(\"code\",[e._v(\"setup\")]),e._v(\" method letting configure API client with axios setup configuration.\")]),e._v(\" \"),a(\"p\",[e._v(\"TBD\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"hooks\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hooks\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" Hooks\")]),e._v(\" \"),a(\"p\",[e._v(\"TBD\")])])}),[],!1,null,null,null);t.default=o.exports}}]);","extractedComments":[]}